// 定义项目 API 的 proto 文件 可以同时描述 gRPC 和 HTTP API
// protobuf 文件参考:
//  - https://developers.google.com/protocol-buffers/
syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

// package 命名使用 {appid}.{version} 的方式, version 形如 v1, v2 ..
package eagle.organization.v1;

option go_package = "api";
option (gogoproto.goproto_getters_all) = false;

message Organization {
  string id = 1 [(gogoproto.moretags) = 'ddb:"organization_id"'];
  string name = 2 [(gogoproto.moretags) = 'ddb:"name"'];
  string contactName = 3[(gogoproto.moretags) = 'ddb:"contact_name"'];
  string contactEmail = 4[(gogoproto.moretags) = 'ddb:"contact_email"'];
  string contactPhone = 5[(gogoproto.moretags) = 'ddb:"contact_phone"'];
}

service OrganizationSvc {
  rpc Ping(.google.protobuf.Empty) returns (.google.protobuf.Empty);
  rpc GetOrganization(GetOrgReq) returns (Organization) {
    option (google.api.http) = {
      get: "/organization"
    };
  };
  rpc AddOrganization(Organization) returns (.google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/organization"
    };
  };
  rpc UpdateOrganization(Organization) returns (.google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/organization"
    };
  };
  rpc DeleteOrganization(Organization) returns (.google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/organization"
    };
  };
}

message GetOrgReq {
  string organizationId = 1 [(gogoproto.moretags) = 'form:"organizationId" validate:"required"'];
}
